version: "3.7"

x-common-env: &common-env
    APACHE_RUN_USER: "#1000"
    APACHE_RUN_GROUP: "#1000"
    APACHE_LOG_DIR: /var/log/apache2
    APACHE_RUN_DIR: /var/run/apache2
    APACHE_PID_FILE: /var/run/apache2/apache2.pid
    APACHE_LOCK_DIR: /var/lock/apache2
    APP_TIMEZONE: ${APP_TIMEZONE:-Asia/Baku}

x-common-healthcheck-v2: &common-healthcheck-v2
    test: [ "CMD", "curl", "-f", "http://localhost/up" ]
    interval: 10m
    retries: 5
    start_period: 10m
    timeout: 1m

x-shared-laravel-volume: &shared-laravel-volume
    ./shared/laravel-common:/var/www/html/shared:ro


services:
    db_mysql:
        image: mysql:8.0
        container_name: db_mysql
        environment:
            MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-root}
            SERVICE_TAGS: dev
            SERVICE_NAME: mysql
        ports:
            - "${MYSQL_PUBLIC_PORT:-8306}:3306"
        volumes:
            - ./docker/mysql/init-db.sql:/var/opt/mysql/init-db.sql
            - db_mysql_data:/var/lib/mysql
        networks:
            - private

    db_postgres:
        image: postgres:13
        container_name: db_postgres
        environment:
            POSTGRES_DB: ${POSTGRES_DB:-database}
            POSTGRES_USER: ${POSTGRES_USER:-user}
            POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-password}
        ports:
            - "${POSTGRES_PUBLIC_PORT:-8432}:5432"
        volumes:
            - ./docker/postgres:/docker-entrypoint-initdb.d
            - db_postgres_data:/var/lib/postgresql/data
        networks:
            - private

    db_mssql:
        image: mcr.microsoft.com/mssql/server:2022-latest
        container_name: db_mssql
        environment:
            ACCEPT_EULA: Y
            MSSQL_SA_PASSWORD: ${MSSQL_SA_PASSWORD:-Password1*}
        ports:
            - "${MSSQL_PUBLIC_PORT:-8433}:1433"
        volumes:
            - ./docker/sqlsrv/init-db.sql:/var/opt/mssql/init-db.sql
            - db_mssql_data:/var/opt/mssql
        networks:
            - private

    db_oracle:
        image: gvenzl/oracle-free:latest
        container_name: oracle
        environment:
            ORACLE_PASSWORD: ${ORACLE_PASSWORD:-Password1*}
        ports:
            - "${ORACLE_PUBLIC_PORT:-8521}:1521"
        volumes:
            - db_oracle_data:/opt/oracle/oradata
        networks:
            - private

    minio:
        image: minio/minio
        container_name: minio
        environment:
            MINIO_ACCESS_KEY: ${AWS_ACCESS_KEY_ID:-defaultaccesskey}
            MINIO_SECRET_KEY: ${AWS_SECRET_ACCESS_KEY:-defaultsecretkey}
        ports:
            - "${MINIO_WEB_UI_PORT:-9100}:80"
        command: server /data --console-address ":80"
        volumes:
            - ./buckets:/data
        networks:
            - private

    adminpanel:
        image: abdukhaligov/phober-php-apache
        container_name: adminpanel
        environment:
            << : *common-env
            APP_KEY: ${APP_KEY_ADMINPANEL}
            AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID:-defaultaccesskey}
            AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY:-defaultsecretkey}
            AWS_DEFAULT_REGION: us-east-1
            AWS_BUCKET: media
            AWS_URL: "${API_GATEWAY_HOST:-https://localhost}:${API_GATEWAY_PORT:-8000}/s3"
            AWS_ENDPOINT: 'http://minio:9000'
            AWS_USE_PATH_STYLE_ENDPOINT: 'true'
            DB_CONFIGS_DATABASE: '/var/www/html/database/configs.sqlite'
        ports:
            - "${ADMIN_PANEL_PORT:-8100}:80"
        volumes:
            - *shared-laravel-volume
            - ./services/adminpanel:/var/www/html
            - ./docker/sqlite/configs.sqlite:/var/www/html/database/configs.sqlite
        depends_on:
            - db_mysql
        networks:
            - private
            - public
        entrypoint: sh -c "apache2 -D FOREGROUND"

    config-server:
        image: abdukhaligov/phober-php-apache
        container_name: config-server
        environment:
            << : *common-env
            APP_KEY: ${APP_KEY_CONFIG_SERVER}
        volumes:
            - *shared-laravel-volume
            - ./services/config-server:/var/www/html
            - ./docker/sqlite/configs.sqlite:/var/www/html/database/database.sqlite
        depends_on:
            - db_mysql
        networks:
            - private
        entrypoint: sh -c "apache2 -D FOREGROUND"
        healthcheck: *common-healthcheck-v2

    device-service:
        image: abdukhaligov/phober-php-apache
        container_name: device-service
        environment:
            << : *common-env
            APP_KEY: ${APP_KEY_DEVICE_SERVICE}
            APP_URL: "/hardware"
            AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
            AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
            AWS_DEFAULT_REGION: us-east-1
            AWS_BUCKET: media
            AWS_URL: '/s3/media'
            AWS_ENDPOINT: 'http://minio:9000'
            AWS_USE_PATH_STYLE_ENDPOINT: 'true'
        volumes:
            - *shared-laravel-volume
            - ./services/device-service:/var/www/html
        depends_on:
            - db_postgres
        networks:
            - private
        deploy:
            replicas: 1
        entrypoint: sh -c "apache2 -D FOREGROUND"
        healthcheck: *common-healthcheck-v2

    crm-service:
        image: abdukhaligov/phober-php-apache
        container_name: crm-service
        environment:
            << : *common-env
            APP_KEY: ${APP_KEY_CRM_SERVICE}
        volumes:
            - *shared-laravel-volume
            - ./services/crm-service:/var/www/html
        depends_on:
            - db_oracle
        networks:
            - private
        entrypoint: sh -c "apache2 -D FOREGROUND"
        healthcheck: *common-healthcheck-v2

    staff-service:
        image: abdukhaligov/phober-php-apache
        container_name: staff-service
        environment:
            << : *common-env
            APP_KEY: ${APP_KEY_STAFF_SERVICE}
        volumes:
            - *shared-laravel-volume
            - ./services/staff-service:/var/www/html
        depends_on:
            - db_mssql
        networks:
            - private
        entrypoint: sh -c "apache2 -D FOREGROUND"
        healthcheck: *common-healthcheck-v2

    notification-server:
        image: abdukhaligov/phober-php-apache
        container_name: notification-server
        environment:
            << : *common-env
            APP_KEY: ${APP_KEY_NOTIFICATION_SERVER}
        volumes:
            - *shared-laravel-volume
            - ./services/notification-server:/var/www/html
        depends_on:
            - db_mysql
        networks:
            - private
        entrypoint: sh -c "apache2 -D FOREGROUND"
        healthcheck: *common-healthcheck-v2

    notification-queue:
        image: abdukhaligov/phober-php-apache
        container_name: notification-queue
        command: php artisan queue:work
        environment:
            << : *common-env
            APP_KEY: ${APP_KEY_NOTIFICATION_SERVER}
        volumes:
            - *shared-laravel-volume
            - ./services/notification-server:/var/www/html
        depends_on:
            - notification-server
        networks:
            - private

    auth-server:
        image: abdukhaligov/phober-php-apache
        container_name: auth-server
        environment:
            << : *common-env
            APP_KEY: ${APP_KEY_AUTH_SERVER}
        volumes:
            - *shared-laravel-volume
            - ./services/auth-server:/var/www/html
        depends_on:
            - db_mssql
            - db_mysql
        networks:
            - private
        entrypoint: sh -c "apache2 -D FOREGROUND"
        healthcheck: *common-healthcheck-v2

    api-gateway:
        image: nginx:latest
        container_name: api-gateway
        ports:
            - "${API_GATEWAY_PORT:-8000}:443"
        volumes:
            - ./docker/api-gateway/certs/nginx.crt:/etc/nginx/ssl/nginx.crt:ro
            - ./docker/api-gateway/certs/nginx.key:/etc/nginx/ssl/nginx.key:ro
            - ./docker/api-gateway/certs/dhparam.pem:/etc/nginx/ssl/dhparam.pem:ro
            - ./docker/api-gateway/nginx.conf:/etc/nginx/nginx.conf
        networks:
            - private
            - public
        depends_on:
            - notification-server
            - auth-server
            - device-service
            - crm-service
            - staff-service

    elasticsearch:
        image: elasticsearch:7.17.26
        container_name: elasticsearch
        environment:
            - discovery.type=single-node
            - ELASTIC_PASSWORD=${ELASTIC_PASSWORD:-changeme}
        volumes:
            - elasticsearch_data:/usr/share/elasticsearch/data
        networks:
            - private

    logstash:
        image: logstash:7.17.1
        container_name: logstash
        networks:
            - private
        volumes:
            - ./docker/elk/logstash.conf:/usr/share/logstash/pipeline/logstash.conf

    kibana:
        image: kibana:7.17.1
        container_name: kibana
        ports:
            - "${KIBANA_PORT:-8601}:5601"
        networks:
            - private

volumes:
    db_mysql_data:
    db_postgres_data:
    db_oracle_data:
    db_mssql_data:
    elasticsearch_data:

networks:
    private:
        name: phober_private
        driver: bridge
    public:
        name: phober_public
        driver: bridge
