version: "3.7"

x-common-env: &common-env
    APACHE_RUN_USER: "#1000"
    APACHE_RUN_GROUP: "#1000"
    APACHE_LOG_DIR: /var/log/apache2
    APACHE_RUN_DIR: /var/run/apache2
    APACHE_PID_FILE: /var/run/apache2/apache2.pid
    APACHE_LOCK_DIR: /var/lock/apache2
    APP_KEY: base64:10GvWo3QVZLvODVr0rKxufpyI2rUVmLqbWv6dfEWs4U=
    APP_TIMEZONE: Asia/Baku

x-common-healthcheck: &common-healthcheck
    test: [ "CMD", "curl", "-f", "http://localhost/health" ]
    interval: 60s
    retries: 5
    start_period: 60s
    timeout: 20s

x-shared-volume: &shared-volume
    ./shared:/var/www/html/shared

services:
    db_mysql:
        platform: linux/x86_64
        image: mysql:8.0
        container_name: db_mysql
        ports:
            - "8306:3306"
        environment:
            MYSQL_ROOT_PASSWORD: root
            SERVICE_TAGS: dev
            SERVICE_NAME: mysql
        volumes:
            - db_mysql_data:/var/lib/mysql
        networks:
            - private

    db_postgres:
        image: postgres:13
        container_name: db_postgres
        environment:
            POSTGRES_DB: database
            POSTGRES_USER: user
            POSTGRES_PASSWORD: password
        volumes:
            - ./env/postgres:/docker-entrypoint-initdb.d
            - db_postgres_data:/var/lib/postgresql/data
        ports:
            - "8432:5432"
        networks:
            - private

    db_mssql:
        container_name: db_mssql
        image: mcr.microsoft.com/mssql/server:2022-latest
        environment:
            - ACCEPT_EULA=Y
            - MSSQL_SA_PASSWORD=Password1*
        ports:
            - "8433:1433"
        volumes:
            - db_mssql_data:/var/opt/mssql
        networks:
            - private

    db_oracle:
        container_name: oracle
        image: gvenzl/oracle-free:latest
        environment:
            ORACLE_PASSWORD: Password1*
        ports:
            - "8521:1521"
        volumes:
            - db_oracle_data:/opt/oracle/oradata
        networks:
            - private

    minio:
        image: minio/minio
        container_name: minio
        environment:
            MINIO_ACCESS_KEY: ${AWS_ACCESS_KEY_ID}
            MINIO_SECRET_KEY: ${AWS_SECRET_ACCESS_KEY}
        ports:
            - "${MINIO_WEB_UI_PORT:-9100}:80"
        command: server /data --console-address ":80"
        volumes:
            - ./buckets:/data
        networks:
            - private

    adminpanel:
        build:
            context: ./
            dockerfile: ./env/phober-php_8.1-apache/Dockerfile
        image: phober-php_8.1-apache
        container_name: adminpanel
        ports:
            - "${ADMIN_PANEL_PORT:-8100}:80"
        environment:
            << : *common-env
            AWS_ACCESS_KEY_ID: youraccesskey
            AWS_SECRET_ACCESS_KEY: yoursecretkey
            AWS_DEFAULT_REGION: us-east-1
            AWS_BUCKET: media
            AWS_URL: "${API_GATEWAY_HOST:-http://localhost}:${API_GATEWAY_PORT:-8000}/s3"
            AWS_ENDPOINT: 'http://minio:9000'
            AWS_USE_PATH_STYLE_ENDPOINT: true
        volumes:
            - *shared-volume
            - ./adminpanel:/var/www/html
        depends_on:
            - db_mysql
        networks:
            - private
            - public
        entrypoint: sh -c "apache2 -D FOREGROUND"
        healthcheck: *common-healthcheck

    config-server:
        image: phober-php_8.1-apache
        container_name: config-server
        environment:
            << : *common-env
        volumes:
            - *shared-volume
            - ./config-server:/var/www/html
        depends_on:
            - db_mysql
        networks:
            - private
        entrypoint: sh -c "php /var/www/html/artisan hostname:update 'config-server' && apache2 -D FOREGROUND"
        healthcheck: *common-healthcheck

    device-service:
        image: phober-php_8.1-apache
        environment:
            << : *common-env
            APP_URL: "/hardware"
            AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
            AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
            AWS_DEFAULT_REGION: us-east-1
            AWS_BUCKET: media
            AWS_URL: '/s3/media'
            AWS_ENDPOINT: 'http://minio:9000'
            AWS_USE_PATH_STYLE_ENDPOINT: true
        volumes:
            - *shared-volume
            - ./device-service:/var/www/html
        depends_on:
            - db_postgres
        networks:
            - private
        deploy:
            replicas: 1
        entrypoint: sh -c "php /var/www/html/artisan hostname:update 'device-service' && apache2 -D FOREGROUND"
        healthcheck: *common-healthcheck

    crm-service:
        image: phober-php_8.1-apache
        container_name: crm-service
        environment:
            << : *common-env
        volumes:
            - *shared-volume
            - ./crm-service:/var/www/html
        depends_on:
            - db_oracle
        networks:
            - private
        entrypoint: sh -c "php /var/www/html/artisan hostname:update 'crm-service' && apache2 -D FOREGROUND"
        healthcheck: *common-healthcheck

    staff-service:
        image: phober-php_8.1-apache
        container_name: staff-service
        environment:
            << : *common-env
        volumes:
            - *shared-volume
            - ./staff-service:/var/www/html
        depends_on:
            - db_mssql
        networks:
            - private
        entrypoint: sh -c "php /var/www/html/artisan hostname:update 'staff-service' && apache2 -D FOREGROUND"
        healthcheck: *common-healthcheck

    notification-server:
        image: phober-php_8.1-apache
        container_name: notification-server
        environment:
            << : *common-env
        volumes:
            - *shared-volume
            - ./notification-server:/var/www/html
        networks:
            - private
        entrypoint: sh -c "php /var/www/html/artisan hostname:update 'notification-server' && apache2 -D FOREGROUND"
        healthcheck: *common-healthcheck

    notification-queue:
        image: phober-php_8.1-apache
        container_name: notification-queue
        command: php artisan queue:work
        restart: always
        environment:
            << : *common-env
        volumes:
            - *shared-volume
            - ./notification-server:/var/www/html
        depends_on:
            - notification-server
        networks:
            - private

    auth-server:
        image: phober-php_8.1-apache
        container_name: auth-server
        environment:
            << : *common-env
        volumes:
            - *shared-volume
            - ./auth-server:/var/www/html
        depends_on:
            - db_mssql
        networks:
            - private
        entrypoint: sh -c "php /var/www/html/artisan hostname:update 'auth-server' && apache2 -D FOREGROUND"
        healthcheck: *common-healthcheck

    api-gateway:
        image: nginx:latest
        container_name: api-gateway
        ports:
            - "${API_GATEWAY_PORT:-8000}:80"
        volumes:
            - ./env/api-gateway/nginx.conf:/etc/nginx/nginx.conf
        networks:
            - private
            - public
        depends_on:
            - notification-server
            - auth-server
            - device-service
            - crm-service
            - staff-service

volumes:
    db_mysql_data:
    db_postgres_data:
    db_oracle_data:
    db_mssql_data:

networks:
    private:
        name: phober_private
        driver: bridge
    public:
        name: phober_public
        driver: bridge
