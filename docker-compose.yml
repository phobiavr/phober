version: "3.7"

services:
    db:
        platform: linux/x86_64
        image: mysql:8.0
        container_name: db
        ports:
            - 3306:3306
        environment:
            MYSQL_ROOT_PASSWORD: root
            SERVICE_TAGS: dev
            SERVICE_NAME: mysql
        volumes:
            - ./env/mysql:/docker-entrypoint-initdb.d
            - dbdata:/var/lib/mysql
        networks:
            - backend

    phpmyadmin:
        platform: linux/x86_64
        image: phpmyadmin
        container_name: phpmyadmin
        links:
            - db
        depends_on:
            - db
        environment:
            PMA_HOST: db
            PMA_PORT: 3306
            PMA_ARBITRARY: 1
        ports:
            - 8900:80
        networks:
            - backend

    config-server:
        image: phober-php_8.1-apache
        container_name: config-server
        restart: unless-stopped
        ports:
            - 8700:80
        environment:
            - APACHE_RUN_USER=#1000
            - APACHE_RUN_GROUP=#1000
        volumes:
            - ./config-server:/var/www/html
        depends_on:
            - db
        networks:
            - backend

    adminpanel:
        build:
            args:
                user: user
                uid: 1000
            context: ./
            dockerfile: ./env/phober-php_8.1-apache/Dockerfile
        image: phober-php_8.1-apache
        container_name: adminpanel
        restart: unless-stopped
        ports:
            - 8100:80
        environment:
            - APACHE_RUN_USER=#1000
            - APACHE_RUN_GROUP=#1000
        volumes:
            - ./adminpanel:/var/www/html
            - ./media:/var/www/html/public/storage/media
            - ./media:/var/www/html/storage/app/public/media
            - ~/.ssh:/home/user/.ssh
        depends_on:
            - db
            - phpmyadmin
        networks:
            - backend

    device-service:
        image: phober-php_8.1-apache
        restart: unless-stopped
        ports:
            - "8300-8399:80"
        environment:
            - APACHE_RUN_USER=#1000
            - APACHE_RUN_GROUP=#1000
        volumes:
            - ./device-service:/var/www/html
            - ./media:/var/www/html/public/storage/media:ro
            - ./media:/var/www/html/storage/app/public/media:ro
        depends_on:
            - adminpanel
        networks:
            - backend
        deploy:
            replicas: 3

    notification-server:
        image: phober-php_8.1-apache
        container_name: notification-server
        restart: unless-stopped
        ports:
            - 8888:80
        environment:
            - APACHE_RUN_USER=#1000
            - APACHE_RUN_GROUP=#1000
        volumes:
            - ./notification-server:/var/www/html
        depends_on:
            - adminpanel
            -  rabbitmq
        networks:
            - backend

    auth-server:
        image: phober-php_8.1-apache
        container_name: auth-server
        restart: unless-stopped
        ports:
            - 8500:80
        environment:
            - APACHE_RUN_USER=#1000
            - APACHE_RUN_GROUP=#1000
        volumes:
            - ./auth-server:/var/www/html
        depends_on:
            - adminpanel
        networks:
            - backend

    rabbitmq:
        image: "rabbitmq:3-management"
        container_name: rabbitmq
        environment:
            RABBITMQ_DEFAULT_USER: "user"
            RABBITMQ_DEFAULT_PASS: "password"
        ports:
            - "5672:5672"
            - "15672:15672"

#    old-website:
#        build:
#            context: ./
#            dockerfile: ./env/phober-old-website/Dockerfile
#        image: phober-old-website
#        container_name: old-website
#        ports:
#            - 80:80
#        volumes:
#            - ./old-website:/usr/share/nginx/html
#        networks:
#            - backend
#            - frontend
#
#    website:
#        build:
#            context: ./
#            dockerfile: ./env/phober-website/Dockerfile
#        image: phober-website
#        container_name: website
#        ports:
#            - 3030:3000
#        volumes:
#            - ./website:/app
#        stdin_open: true
#        environment:
#            - CHOKIDAR_USEPOLLING=true
#        command: npm run start
#        networks:
#            - backend
#            - frontend

    api-gateway:
        image: nginx:latest
        container_name: nginx
        ports:
            - "8000:80"
        volumes:
            - ./env/nginx/nginx.conf:/etc/nginx/nginx.conf
        networks:
            - backend
        depends_on:
            - config-server
            - auth-server
            - device-service
            - notification-server

volumes:
    dbdata:

networks:
  backend:
    name: phober_backend
    driver: bridge
  frontend:
    name: phober_frontend
    driver: bridge